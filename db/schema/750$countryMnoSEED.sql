DECLARE @countryTmp table ([countryId] int, [name] varchar(100), [itemNameId] bigint, [phonePrefix] varchar(10), [countryCode] char(2))

INSERT INTO @countryTmp ([countryId], [name], [itemNameId], [phonePrefix], [countryCode]) VALUES 
  (1, 'Andorra', NULL, NULL, 'AD'),
  (2, 'United Arab Emirates', NULL, NULL, 'AE'),
(300, 'Afghanistan', NULL, NULL, 'AF'),
(4, 'Antigua And Barbuda', NULL, NULL, 'AG'),
(5, 'Anguilla', NULL, NULL, 'AI'),
(6, 'Albania', NULL, NULL, 'AL'),
(7, 'Armenia', NULL, NULL, 'AM'),
(8, 'Netherlands Antilles', NULL, NULL, 'AN'),
(9, 'Angola', NULL, NULL, 'AO'),
(10, 'Antarctica', NULL, NULL, 'AQ'),
(11, 'Argentina', NULL, NULL, 'AR'),
(12, 'American Samoa', NULL, NULL, 'AS'),
(13, 'Austria', NULL, NULL, 'AT'),
(14, 'Australia', NULL, NULL, 'AU'),
(15, 'Aruba', NULL, NULL, 'AW'),
(16, 'Azerbaijan', NULL, NULL, 'AZ'),
(17, 'Bosnia-Herzegovina', NULL, NULL, 'BA'),
(18, 'Barbados', NULL, NULL, 'BB'),
(19, 'Bangladesh', NULL, NULL, 'BD'),
(20, 'Belgium', NULL, NULL, 'BE'),
(21, 'Burkina Faso', NULL, NULL, 'BF'),
(22, 'Bulgaria', NULL, NULL, 'BG'),
(23, 'Bahrain', NULL, NULL, 'BH'),
(24, 'Burundi', NULL, NULL, 'BI'),
(25, 'Benin', NULL, NULL, 'BJ'),
(26, 'Bermuda', NULL, NULL, 'BM'),
(27, 'Brunei Darussalam', NULL, NULL, 'BN'),
(28, 'Bolivia', NULL, NULL, 'BO'),
(29, 'Brazil', NULL, NULL, 'BR'),
(30, 'Bahamas', NULL, NULL, 'BS'),
(31, 'Bhutan', NULL, NULL, 'BT'),
(32, 'Bouvet Island', NULL, NULL, 'BV'),
(301, 'Botswana', NULL, NULL, 'BW'),
(302, 'Belarus', NULL, NULL, 'BY'),
(303, 'Belize', NULL, NULL, 'BZ'),
(304, 'Canada', NULL, NULL, 'CA'),
(308, 'Cocos (Keeling), Islands', NULL, NULL, 'CC'),
(309, 'Congo (Democratic republic of),', NULL, NULL, 'CD'),
(39, 'Central African Republic', NULL, NULL, 'CF'),
(40, 'Congo', NULL, NULL, 'CG'),
(41, 'Switzerland', NULL, NULL, 'CH'),
(34, 'Ivory Coast', NULL, '+225', 'CI'),
(43, 'Cook Islands', NULL, NULL, 'CK'),
(44, 'Chile', NULL, NULL, 'CL'),
(45, 'Cameroon', NULL, NULL, 'CM'),
(46, 'Peoples Republic of China', NULL, NULL, 'CN'),
(47, 'Columbia', NULL, NULL, 'CO'),
(48, 'Costa Rica', NULL, NULL, 'CR'),
(49, 'Cuba', NULL, NULL, 'CU'),
(50, 'Cape Verde', NULL, NULL, 'CV'),
(51, 'Christmas Islands', NULL, NULL, 'CX'),
(52, 'Cyprus', NULL, NULL, 'CY'),
(53, 'Czech Republic', NULL, NULL, 'CZ'),
(54, 'Germany', NULL, NULL, 'DE'),
(55, 'Djibouti', NULL, NULL, 'DJ'),
(56, 'Denmark', NULL, NULL, 'DK'),
(57, 'Dominica', NULL, NULL, 'DM'),
(58, 'Dominican Republic', NULL, NULL, 'DO'),
(59, 'Algeria', NULL, NULL, 'DZ'),
(60, 'Ecuador', NULL, NULL, 'EC'),
(61, 'Estonia', NULL, NULL, 'EE'),
(62, 'Egypt', NULL, NULL, 'EG'),
(63, 'Western Sahara', NULL, NULL, 'EH'),
(64, 'Eritrea', NULL, NULL, 'ER'),
(65, 'Spain', NULL, NULL, 'ES'),
(66, 'Ethiopia', NULL, NULL, 'ET'),
(67, 'European In Countries', NULL, NULL, 'EU'),
(68, 'Finland', NULL, NULL, 'FI'),
(69, 'Fiji', NULL, NULL, 'FJ'),
(70, 'Falkland Islands (Malvinas),', NULL, NULL, 'FK'),
(71, 'Micronesia', NULL, NULL, 'FM'),
(72, 'Faroe Islands', NULL, NULL, 'FO'),
(73, 'France', NULL, NULL, 'FR'),
(74, 'Gabon', NULL, NULL, 'GA'),
(75, 'Great Britain', NULL, NULL, 'GB'),
(76, 'Grenada', NULL, NULL, 'GD'),
(77, 'Georgia', NULL, NULL, 'GE'),
(78, 'French Guiana', NULL, NULL, 'GF'),
(79, 'Channel Islands and Guernsey', NULL, NULL, 'GG'),
(80, 'Ghana', NULL, NULL, 'GH'),
(81, 'Gibraltar', NULL, NULL, 'GI'),
(82, 'Greenland', NULL, NULL, 'GL'),
(83, 'Gambia', NULL, NULL, 'GM'),
(84, 'Guinea', NULL, NULL, 'GN'),
(85, 'Guadeloupe', NULL, NULL, 'GP'),
(86, 'Equatorial Guinea', NULL, NULL, 'GQ'),
(87, 'Greece', NULL, NULL, 'GR'),
(88, 'South Georgia & South Sandwich Is', NULL, NULL, 'GS'),
(89, 'Guatemala', NULL, NULL, 'GT'),
(90, 'Guam', NULL, NULL, 'GU'),
(91, 'Guinea-Bissau', NULL, NULL, 'GW'),
(92, 'Guyana', NULL, NULL, 'GY'),
(93, 'Hong Kong', NULL, NULL, 'HK'),
(94, 'Heard and Mcdonald Islands', NULL, NULL, 'HM'),
(95, 'Honduras', NULL, NULL, 'HN'),
(96, 'Croatia', NULL, NULL, 'HR'),
(97, 'Haiti', NULL, NULL, 'HT'),
(98, 'Hungary', NULL, NULL, 'HU'),
(99, 'Indonesia', NULL, NULL, 'ID'),
(100, 'Ireland', NULL, NULL, 'IE'),
(101, 'Israel', NULL, NULL, 'IL'),
(102, 'Isle of Man', NULL, NULL, 'IM'),
(103, 'India', NULL, NULL, 'IN'),
(104, 'British Indian Ocean Territory', NULL, NULL, 'IO'),
(105, 'Iraq', NULL, NULL, 'IQ'),
(106, 'Iran (Islamic Republic of),', NULL, NULL, 'IR'),
(107, 'Iceland', NULL, NULL, 'IS'),
(108, 'Italy', NULL, NULL, 'IT'),
(109, 'Jersey', NULL, NULL, 'JE'),
(110, 'Jamaica', NULL, NULL, 'JM'),
(111, 'Jordan', NULL, NULL, 'JO'),
(112, 'Japan', NULL, NULL, 'JP'),
(113, 'Kenya', NULL, NULL, 'KE'),
(114, 'Kyrgyzstan', NULL, NULL, 'KG'),
(115, 'Cambodia', NULL, NULL, 'KH'),
(116, 'Kiribati', NULL, NULL, 'KI'),
(117, 'Comoro Islands', NULL, NULL, 'KM'),
(118, 'Saint Kitts and Nevis', NULL, NULL, 'KN'),
(119, 'Korea (North),', NULL, NULL, 'KP'),
(120, 'Korea', NULL, NULL, 'KR'),
(121, 'Kuwait', NULL, NULL, 'KW'),
(122, 'Cayman Islands', NULL, NULL, 'KY'),
(123, 'Kazakstan', NULL, NULL, 'KZ'),
(124, 'Lao People''s Democratic Republic', NULL, NULL, 'LA'),
(125, 'Lebanon', NULL, NULL, 'LB'),
(126, 'Saint Lucia', NULL, NULL, 'LC'),
(127, 'Liechtenstein', NULL, NULL, 'LI'),
(128, 'Sri Lanka', NULL, NULL, 'LK'),
(129, 'Liberia', NULL, NULL, 'LR'),
(130, 'Lesotho', NULL, NULL, 'LS'),
(131, 'Lithuania', NULL, NULL, 'LT'),
(132, 'Luxembourg', NULL, NULL, 'LU'),
(133, 'Latvia', NULL, NULL, 'LV'),
(134, 'Libyan Arab Jamahiriya', NULL, NULL, 'LY'),
(135, 'Morocco', NULL, NULL, 'MA'),
(136, 'Monaco', NULL, NULL, 'MC'),
(137, 'Moldova', NULL, NULL, 'MD'),
(33, 'Madagascar', NULL, '+261', 'MG'),
(139, 'Marshall Islands', NULL, NULL, 'MH'),
(140, 'Macedonia', NULL, NULL, 'MK'),
(35, 'Mali', NULL, '+223', 'ML'),
(142, 'Myanmar', NULL, NULL, 'MM'),
(143, 'Mongolia', NULL, NULL, 'MN'),
(144, 'Macau', NULL, NULL, 'MO'),
(145, 'Northern Mariana Islands', NULL, NULL, 'MP'),
(146, 'Martinique', NULL, NULL, 'MQ'),
(147, 'Mauritania', NULL, NULL, 'MR'),
(148, 'Monserrat', NULL, NULL, 'MS'),
(149, 'Malta', NULL, NULL, 'MT'),
(150, 'Mauritius', NULL, NULL, 'MU'),
(151, 'Maldives', NULL, NULL, 'MV'),
(152, 'Malawi', NULL, NULL, 'MW'),
(153, 'Mexico', NULL, NULL, 'MX'),
(154, 'Malaysia', NULL, NULL, 'MY'),
(155, 'Mozambique', NULL, NULL, 'MZ'),
(156, 'Namibia', NULL, NULL, 'NA'),
(157, 'New Caledonia', NULL, NULL, 'NC'),
(158, 'Niger', NULL, NULL, 'NE'),
(159, 'Norfolk Island', NULL, NULL, 'NF'),
(37, 'Nigeria', NULL, '+234', 'NG'),
(161, 'Nicaragua', NULL, NULL, 'NI'),
(162, 'Netherlands', NULL, NULL, 'NL'),
(163, 'Norway', NULL, NULL, 'NO'),
(164, 'Nepal', NULL, NULL, 'NP'),
(165, 'Nauru', NULL, NULL, 'NR'),
(166, 'Niue', NULL, NULL, 'NU'),
(167, 'New Zealand', NULL, NULL, 'NZ'),
(168, 'Oman', NULL, NULL, 'OM'),
(169, 'Panama', NULL, NULL, 'PA'),
(170, 'Peru', NULL, NULL, 'PE'),
(171, 'French Polynesia', NULL, NULL, 'PF'),
(172, 'Papua New Guinea', NULL, NULL, 'PG'),
(173, 'Philippines', NULL, NULL, 'PH'),
(174, 'Pakistan', NULL, NULL, 'PK'),
(175, 'Poland', NULL, NULL, 'PL'),
(176, 'St. Pierre and Miquelon', NULL, NULL, 'PM'),
(177, 'Pitcairn', NULL, NULL, 'PN'),
(178, 'Puerto Rico', NULL, NULL, 'PR'),
(179, 'Portugal', NULL, NULL, 'PT'),
(180, 'Palau', NULL, NULL, 'PW'),
(181, 'Paraguay', NULL, NULL, 'PY'),
(182, 'Qatar', NULL, NULL, 'QA'),
(183, 'Reunion', NULL, NULL, 'RE'),
(184, 'Romania', NULL, NULL, 'RO'),
(185, 'Russian Federation', NULL, NULL, 'RU'),
(186, 'Rwanda', NULL, NULL, 'RW'),
(187, 'Saudi Arabia', NULL, NULL, 'SA'),
(188, 'Solomon Islands', NULL, NULL, 'SB'),
(189, 'Seychelles', NULL, NULL, 'SC'),
(190, 'Sudan', NULL, NULL, 'SD'),
(191, 'Sweden', NULL, NULL, 'SE'),
(192, 'Singapore', NULL, NULL, 'SG'),
(193, 'St. Helena', NULL, NULL, 'SH'),
(194, 'Slovenia', NULL, NULL, 'SI'),
(195, 'Svalbard and Jan Mayen Islands', NULL, NULL, 'SJ'),
(196, 'Slovakia', NULL, NULL, 'SK'),
(197, 'Sierra Leone', NULL, NULL, 'SL'),
(198, 'San Marino', NULL, NULL, 'SM'),
(3, 'Senegal', NULL, '+221', 'SN'),
(200, 'Somalia', NULL, NULL, 'SO'),
(201, 'Suriname', NULL, NULL, 'SR'),
(202, 'Sao Tome and Principe', NULL, NULL, 'ST'),
(203, 'El Salvador', NULL, NULL, 'SV'),
(204, 'Syrian Arab Republic', NULL, NULL, 'SY'),
(205, 'Swaziland', NULL, NULL, 'SZ'),
(206, 'Turks and Caicos Islands', NULL, NULL, 'TC'),
(207, 'Chad', NULL, NULL, 'TD'),
(208, 'French Southern Territories', NULL, NULL, 'TF'),
(209, 'Togo', NULL, NULL, 'TG'),
(210, 'Thailand', NULL, NULL, 'TH'),
(211, 'Tajikistan', NULL, NULL, 'TJ'),
(212, 'Tokelau', NULL, NULL, 'TK'),
(213, 'Turkmenistan', NULL, NULL, 'TM'),
(36, 'Tunisia', NULL, '+216', 'TN'),
(215, 'Tonga', NULL, NULL, 'TO'),
(216, 'East Timor', NULL, NULL, 'TP'),
(217, 'Turkey', NULL, NULL, 'TR'),
(218, 'Trinidad and Tobago', NULL, NULL, 'TT'),
(219, 'Tuvalu', NULL, NULL, 'TV'),
(220, 'Republic of China (Taiwan),', NULL, NULL, 'TW'),
(221, 'Tanzania', NULL, NULL, 'TZ'),
(222, 'Ukraine', NULL, NULL, 'UA'),
(223, 'Uganda', NULL, NULL, 'UG'),
(224, 'United States Minor Outlying Is.', NULL, NULL, 'UM'),
(225, 'United States of America', NULL, NULL, 'US'),
(226, 'Uruguay', NULL, NULL, 'UY'),
(227, 'Uzbekistan', NULL, NULL, 'UZ'),
(228, 'Holy See (Vatican City State),', NULL, NULL, 'VA'),
(229, 'St. Vincent and the Grenadines', NULL, NULL, 'VC'),
(230, 'Venezuela', NULL, NULL, 'VE'),
(231, 'British Virgin Islands', NULL, NULL, 'VG'),
(232, 'Virgin Islands', NULL, NULL, 'VI'),
(233, 'Vietnam', NULL, NULL, 'VN'),
(234, 'Vanuatu', NULL, NULL, 'VU'),
(235, 'Wallis and Futuna Islands', NULL, NULL, 'WF'),
(236, 'Samoa', NULL, NULL, 'WS'),
(237, 'Europa', NULL, NULL, 'XE'),
(238, 'Gold', NULL, NULL, 'XG'),
(239, 'Silver', NULL, NULL, 'XS'),
(240, 'Worldwide', NULL, NULL, 'XX'),
(241, 'Yemen', NULL, NULL, 'YE'),
(242, 'Mayotte', NULL, NULL, 'YT'),
(243, 'Yugoslavia', NULL, NULL, 'YU'),
(244, 'South Africa', NULL, NULL, 'ZA'),
(245, 'Zambia', NULL, NULL, 'ZM'),
(246, 'Zimbabwe', NULL, NULL, 'ZW')


DECLARE @countryItemTypeId int
SELECT @countryItemTypeId = itemTypeId FROM [core].[itemType] WHERE name = 'country'

MERGE INTO core.itemName 
USING @countryTmp ON itemTypeId = @countryItemTypeId and itemSyncId = [countryCode] AND organizationId is null
WHEN MATCHED AND (itemName != name OR itemCode != countryCode) THEN 
    UPDATE SET itemName = name,
                itemCode = countryCode,
                IsEnabled = 1
WHEN NOT MATCHED BY TARGET THEN
    INSERT (itemTypeId, itemName, itemCode, itemSyncId, organizationId, isEnabled)
    VALUES (@countryItemTypeId, name, countryCode, countryCode, null, 1);


MERGE INTO customer.country t
using 
(
    SELECT n.itemNameId, phoneprefix, c.countryId, countryCode, name
    FROM @countryTmp c
    JOIN core.itemName n ON itemName = name AND itemCode = countryCode
    WHERE itemTypeId = @countryItemTypeId AND organizationId is null and isEnabled = 1
) s ON  t.countryId = s.countryId
WHEN MATCHED AND (t.name != s.name OR t.itemNameId != s.itemNameId OR t.phonePrefix != s.phoneprefix OR t.countryCode != s.countryCode) THEN
    UPDATE SET name = s.name, 
                itemNameId = s.itemNameId, 
                phonePrefix = s.phoneprefix, 
                countryCode = s.countryCode
WHEN NOT MATCHED BY TARGET THEN
    INSERT (countryId, [name], [itemNameId], [phonePrefix], [countryCode])
    VALUES ([countryId], [name], [itemNameId], [phonePrefix], [countryCode]);

-- insert MNO
DECLARE @countrySenegal INT = (select countryId from customer.country where name = 'Senegal')
DECLARE @countryTunisia INT = (select countryId from customer.country where name = 'tunisia')
DECLARE @countryIvory INT = (select countryId from customer.country where name = 'Ivory Coast')
DECLARE @countryMali INT = (select countryId from customer.country where name = 'Mali')
DECLARE @countryMadagascar INT = (select countryId from customer.country where name = 'Madagascar')
DECLARE @countryLiberia INT = (select countryId from customer.country where name = 'Liberia')


MERGE INTO customer.mno AS target
USING
    (VALUES        
        (@countryLiberia, 'Lonestart - MTN', 'active', 'sms/liberiamtn'),
        (@countryLiberia, 'ORANGE Liberia', 'active', 'sms/liberiaorange')
    ) AS source (countryId, name, statusId, ut5Key)
ON target.ut5Key = source.ut5Key
WHEN NOT MATCHED BY TARGET THEN
INSERT (countryId, name, statusId, ut5Key)
VALUES (countryId, name, statusId, ut5Key);

update customer.phone set mnoid = (select mnoid from customer.mno where ut5key='sms/liberiamtn') where mnoid=1;
update customer.phoneUnapproved set mnoid = (select mnoid from customer.mno where ut5key='sms/liberiamtn') where mnoid=1;

Delete from customer.mno where name in('Orange Senegal','Landosi L-2T Tunisia','SMS Pro Ivory Coast',
    'Orange Mali','Airtel Madagascar')